name: Build
on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Tag name
      id: tag_name
      run: |
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      
    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        dockerfile: ./TeslaMateAgile/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: mattjeanes/teslamateagile
        tags: latest
        tag_with_ref: true
        push: ${{ startsWith(github.ref, 'refs/tags/') }}
      
    - name: Build project
      run: |
        dotnet publish ./TeslaMateAgile/TeslaMateAgile.csproj --self-contained true --runtime linux-x64 --output ./output/TeslaMateAgile-linux-x64
        dotnet publish ./TeslaMateAgile/TeslaMateAgile.csproj --self-contained true --runtime linux-arm64 --output ./output/TeslaMateAgile-linux-arm64
        dotnet publish ./TeslaMateAgile/TeslaMateAgile.csproj --self-contained true --runtime linux-arm --output ./output/TeslaMateAgile-linux-arm
        dotnet publish ./TeslaMateAgile/TeslaMateAgile.csproj --self-contained true --runtime win-x64 --output ./output/TeslaMateAgile-win-x64
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: TeslaMateAgile-linux-x64
        path: ./output/TeslaMateAgile-linux-x64
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: TeslaMateAgile-linux-arm64
        path: ./output/TeslaMateAgile-linux-arm64
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: TeslaMateAgile-linux-arm
        path: ./output/TeslaMateAgile-linux-arm
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: TeslaMateAgile-win-x64
        path: ./output/TeslaMateAgile-win-x64
        
    - name: Zip project
      run: |
        cd ./output/TeslaMateAgile-linux-x64
        zip -r ../TeslaMateAgile-linux-64.zip .
        cd ../TeslaMateAgile-linux-arm64
        zip -r ../TeslaMateAgile-linux-arm64.zip .
        cd ../TeslaMateAgile-linux-arm
        zip -r ../TeslaMateAgile-linux-arm.zip .
        cd ../TeslaMateAgile-win-x64
        zip -r ../TeslaMateAgile-win-x64.zip .
        cd ../../
      if: startsWith(github.ref, 'refs/tags/')
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      if: startsWith(github.ref, 'refs/tags/')
      
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/TeslaMateAgile-linux-x64.zip
        asset_name: TeslaMateAgile.zip
        asset_content_type: application/zip
      if: startsWith(github.ref, 'refs/tags/')
    
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/TeslaMateAgile-linux-arm64.zip
        asset_name: TeslaMateAgile.zip
        asset_content_type: application/zip
      if: startsWith(github.ref, 'refs/tags/')
    
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/TeslaMateAgile-linux-arm.zip
        asset_name: TeslaMateAgile.zip
        asset_content_type: application/zip
      if: startsWith(github.ref, 'refs/tags/')
    
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/TeslaMateAgile-win-x64.zip
        asset_name: TeslaMateAgile.zip
        asset_content_type: application/zip
      if: startsWith(github.ref, 'refs/tags/')
      
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.KUBERNETES_AZURE_CREDENTIALS }}
        resource-group: ${{ secrets.KUBERNETES_AZURE_RESOURCEGROUPNAME }}
        cluster-name: ${{ secrets.KUBERNETES_AZURE_CLUSTERNAME }}
      if: startsWith(github.ref, 'refs/tags/')
    
    - name: Replace tokens
      uses: cschleiden/replace-tokens@v1.0
      with:
        tokenPrefix: '{{'
        tokenSuffix: '}}'
        files: ./kube-deploy.yml
      env:
        connectionString: ${{ secrets.KUBERNETES_CONNECTIONSTRING }}
        regionCode: ${{ secrets.KUBERNETES_OCTOPUS_REGIONCODE }}
      if: startsWith(github.ref, 'refs/tags/')
    
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1
      with:
        namespace: ${{ secrets.KUBERNETES_NAMESPACE }}
        manifests: ./kube-deploy.yml
        images: 'mattjeanes/teslamateagile:${{ steps.tag_name.outputs.SOURCE_TAG }}'
      if: startsWith(github.ref, 'refs/tags/')
